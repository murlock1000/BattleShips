AI sukurti yra gana paprasta. Bendravimui su backend naudokite standartinę išvestį.

Pirmosios eilutės jūsų AI kode turėtų būti komentarai, talpinantys jūsų vardą ir trumpą AI aprašymą.

Visų pirma AI backendui turėtų pranešti, kad jis buvo sėkmingai paleistas. Tai galima padaryti išsiuntus 0:

cout << "0 ";

Po kiekvieno išsiunčiamo skaičiaus turi būti išsiunčiamas tarpas (ASCII 32).

Visų pirma, AI turėtų backendui išsiųsti lentelę su duomenimis apie laivus, panašią į šį pavyzdį:

0 0 1 1 1 1 1 0 0 0
0 0 0 0 0 0 0 0 0 0
5 5 0 3 3 3 0 4 4 4
0 0 0 0 0 0 0 0 0 0
0 0 0 0 2 0 0 0 0 0
0 0 0 0 2 0 0 0 0 0
0 0 0 0 2 0 0 0 0 0
0 0 0 0 2 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0

Šioje lentelėje 0 reiškia, kad to langelio neužima joks laivas.
Skaičius nuo 1 iki 5 nurodo, kokias pozicijas užima tam tikras laivas.

Išsiuntęs lentelę, AI gali siųsti savo ėjimus. Ėjimai turėtų atrodyti šitaip:

cout << targetX << " " << targetY << " ";

Nepamirškite po kiekvieno skaičiaus išsiųsti tarpą (ASCII 32)!

X ir Y kintamieji turėtų kisti nuo 1 iki lentos ilgio ar aukščio atitinkamai.

Išsiuntęs savo ėjimą, AI turėtų gauti atsakymą: char nuo '1' iki '4'.

1 - AI nepataikė.
2 - AI pataikė į laivą, bet jo nenuskandino. 
3 - AI nuskandino laivą.
4 - Žaidimas baigtas. Gavęs šį atsakymą, AI turėtų iškart išeiti (return 0).

Iš esmės tai yra viskas. Galite pažiūrėti į ai_random.cpp kaip į pavyzdį, kaip kurti AI.

Tiesa, AI programa turi būti išsaugota "ai" aplanke ir turėti trumpinį ".exe" (dėl Windows palaikymo).

Sakiau, kad tai yra gana paprasta, ar ne? :)
